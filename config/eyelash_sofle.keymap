#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC         &kp N1        &kp N2        &kp N3            &kp N4  &kp N5       &kp LC(A)     &kp N6     &kp N7  &kp N8             &kp N9         &kp N0      &kp EQUAL
&kp TAB         &kp Q         &kp W         &kp E             &kp R   &kp T        &kp LEFT_GUI  &kp Y      &kp U   &kp I              &kp O          &kp P       &kp MINUS
&kp LEFT_SHIFT  &kp A         &kp S         &kp D             &kp F   &kp G        &kp LS(TAB)   &kp H      &kp J   &kp K              &kp L          &kp SEMI    &kp APOSTROPHE
&kp LCTRL       &kp Z         &kp X         &kp C             &kp V   &kp B        &kp TAB       &kp N      &kp M   &kp COMMA          &kp DOT        &kp FSLH    &kp BACKSLASH
&kp LG(V)       &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_BRACKET  &mo 1   &kp SPACE    &to 1         &kp ENTER  &mo 2   &kp RIGHT_BRACKET  &kp BACKSPACE  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp LC(V) LC(C)>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE  &kp F1     &kp F2     &kp F3     &kp F4     &kp F5             &kp UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans     &trans     &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB4           &kp DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans     &kp TILDE  &trans     &trans     &trans     &mkp MB5           &kp LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans     &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &rgb_ug RGB_SPI    &kp RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&to 0      &trans     &trans     &trans     &trans     &trans             &to 2      &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        layer_2 {
            bindings = <
&trans    &kp F11  &kp F12          &kp F13          &kp KP_DIVIDE    &kp KP_MULTIPLY    &mmv MOVE_UP     &trans  &trans  &trans  &trans  &trans  &trans
&trans    &trans   &kp KP_NUMBER_7  &kp KP_N8        &kp KP_NUMBER_9  &kp KP_SUBTRACT    &mmv MOVE_DOWN   &trans  &trans  &trans  &trans  &trans  &trans
&kp CAPS  &trans   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS        &mmv MOVE_LEFT   &trans  &trans  &trans  &trans  &trans  &trans
&trans    &trans   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp BACKSPACE      &mmv MOVE_RIGHT  &trans  &trans  &trans  &trans  &trans  &trans
&to 0     &trans   &trans           &trans           &kp KP_ENTER     &kp SPACE          &mkp LCLK        &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
